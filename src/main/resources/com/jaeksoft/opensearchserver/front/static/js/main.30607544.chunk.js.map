{"version":3,"sources":["store.ts","types.ts","media/oss_logo.png","Navbar.tsx","constants.ts","Gql.tsx","Indices.tsx","Schema.tsx","Utils.ts","WebCrawlRow.tsx","WebCrawls.tsx","FileCrawlRow.tsx","FileCrawls.tsx","components/CrawlFilterStatus.tsx","components/CrawlFilterItemView.tsx","components/CrawFilterListWithKey.ts","WebCrawlEdit.tsx","FileCrawlEdit.tsx","Crawls.tsx","index.tsx"],"names":["Views","CrawlsViews","STATE_KEY","ActionTypes","defaultState","view","INDICES","crawlsView","WEB_CRAWLS","selectedIndex","undefined","editWebCrawl","editFileCrawl","CrawlFilterStatus","setView","type","SET_VIEW","setCrawlsView","SET_CRAWLS_VIEW","crawlName","indexName","settings","EDIT_WEB_CRAWL","EDIT_FILE_CRAWL","storageState","window","localStorage","getItem","initialState","JSON","parse","createStore","state","action","CRAWLS","EDIT_SCHEMA","SCHEMA","FILE_CRAWLS","setItem","stringify","Navbar","useSelector","dispatch","useDispatch","AppBar","position","color","Toolbar","src","oss_logo","alt","style","maxHeight","width","Tabs","value","onChange","event","newValue","aria-label","Tab","label","QUERIES","GRAPHQL","GRAPHQL_ENDPOINT","Gql","fetcher","graphQLParams","a","fetch","method","headers","Accept","body","credentials","data","json","catch","text","INDEX_LIST","gql","CREATE_INDEX","DELETE_INDEX","Indices","useState","keywords","setKeywords","start","rows","useQuery","variables","fetchPolicy","loading","error","refetch","useMutation","name","onError","err","alert","console","gqlCreate","loadingCreate","gqlDelete","loadingDelete","message","Box","p","Grid","container","spacing","alignItems","item","xs","TextField","size","fullWidth","e","target","CircularProgress","Button","disabled","length","indexList","variant","onClick","then","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","map","scope","id","Schema","toDateTime","timeMs","Date","toLocaleString","RUN_WEB_CRAWL","ABORT_WEB_CRAWL","GET_WEB_CRAWL","WebCrawlRow","completionCallback","onCompleted","gqlRun","gqlAbort","useLazyQuery","getWebCrawl","index","gqlGetCrawl","status","abortingReason","setAbortingReason","runCrawlAction","useCallback","abortCrawlAction","reason","disableAbort","running","aborting","disableRun","endTime","log","startTime","crawled","rejected","display","mr","flexGrow","WEB_CRAWL_LIST","DELETE_WEB_CRAWL","WebCrawls","pollInterval","editCrawlAction","Paper","colSpan","webCrawlList","RUN_FILE_CRAWL","ABORT_FILE_CRAWL","GET_FILE_CRAWL","FileCrawlRow","getFileCrawl","FILE_CRAWL_LIST","DELETE_FILE_CRAWL","FileCrawls","fileCrawlList","CrawlFilterStatusOption","setStatus","title","isDefault","FormControl","InputLabel","Select","labelId","MenuItem","accept","reject","CrawlFilterItemView","props","filter","pattern","setPattern","hasChanges","setHashChanges","useEffect","b","mb","placeholder","onAdd","onSave","onDelete","CrawFilterListWithKey","crawlFilters","sequenceNumber","list","this","crawlFilter","add","crawlFilterItem","newItem","key","push","getList","itemToSave","keyToSave","itemToUpdate","find","crawlFilterItemWithKey","UPSERT_WEB_CRAWL","WebCrawlEdit","setIndexName","entryUrl","setEntryUrl","maxDepth","setMaxDepth","setCrawlName","filterPolicy","crawlFilterPolicy","setCrawlFilterPolicy","filters","crawlFilterList","setCrawlFilterList","crawlFilterListWithKey","trace","gqlUpsertCrawl","onUpsert","save","delete","justify","Typography","align","noValidate","autoComplete","required","UPSERT_FILE_CRAWL","FileCrawlEdit","entryPath","setEntryPath","Crawls","View","apolloClient","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","store","ApolloProvider","client","m","flexDirection","height","marginBottom","document","getElementById"],"mappings":"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","file":"static/js/main.30607544.chunk.js","sourcesContent":["/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {createStore} from \"redux\";\nimport {FileCrawlSettings, WebCrawlSettings} from \"./types\";\n\nexport const STATE_KEY = \"opensearchserver:state\";\n\nexport enum Views {\n  INDICES,\n  CRAWLS,\n  QUERIES,\n  GRAPHQL,\n  SCHEMA,\n}\n\nexport enum CrawlsViews {\n  WEB_CRAWLS,\n  FILE_CRAWLS,\n}\n\nexport interface State {\n  view: Views,\n  crawlsView: CrawlsViews,\n  selectedIndex: string | undefined,\n  editWebCrawl: {\n    crawlName: string,\n    indexName: string | undefined,\n    settings: WebCrawlSettings | undefined\n  } | undefined,\n  editFileCrawl: {\n    crawlName: string,\n    indexName: string | undefined,\n    settings: FileCrawlSettings | undefined\n  } | undefined,\n}\n\nconst defaultState: State = {\n  view: Views.INDICES,\n  crawlsView: CrawlsViews.WEB_CRAWLS,\n  selectedIndex: undefined,\n  editWebCrawl: undefined,\n  editFileCrawl: undefined\n}\n\nenum ActionTypes {\n  SET_VIEW,\n  SET_CRAWLS_VIEW,\n  EDIT_SCHEMA,\n  EDIT_WEB_CRAWL,\n  EDIT_FILE_CRAWL\n}\n\ninterface SetViewAction {\n  type: ActionTypes.SET_VIEW;\n  view: Views;\n}\n\ninterface SetCrawlsViewAction {\n  type: ActionTypes.SET_CRAWLS_VIEW;\n  crawlsView: CrawlsViews;\n}\n\ninterface EditSchemaAction {\n  type: ActionTypes.EDIT_SCHEMA;\n  selectedIndex: string;\n}\n\ninterface EditWebCrawlAction {\n  type: ActionTypes.EDIT_WEB_CRAWL;\n  crawlName: string;\n  indexName?: string;\n  settings?: WebCrawlSettings;\n}\n\ninterface EditFileCrawlAction {\n  type: ActionTypes.EDIT_FILE_CRAWL;\n  crawlName: string;\n  indexName?: string;\n  settings?: FileCrawlSettings;\n}\n\ntype Actions = SetViewAction | SetCrawlsViewAction | EditSchemaAction | EditWebCrawlAction | EditFileCrawlAction;\n\nexport const setView = (view: Views): SetViewAction => {\n  return {type: ActionTypes.SET_VIEW, view};\n};\n\nexport const setCrawlsView = (crawlsView: CrawlsViews): SetCrawlsViewAction => {\n  return {type: ActionTypes.SET_CRAWLS_VIEW, crawlsView};\n};\n\nexport const editSchema = (selectedIndex: string): EditSchemaAction => {\n  return {type: ActionTypes.EDIT_SCHEMA, selectedIndex};\n};\n\nexport const editWebCrawl = (crawlName: string, indexName?: string, settings?: WebCrawlSettings): EditWebCrawlAction => {\n  return {type: ActionTypes.EDIT_WEB_CRAWL, crawlName, indexName, settings};\n};\n\nexport const editFileCrawl = (crawlName: string, indexName?: string, settings?: FileCrawlSettings): EditFileCrawlAction => {\n  return {type: ActionTypes.EDIT_FILE_CRAWL, crawlName, indexName, settings};\n};\n\nconst reducer = (state: State = defaultState, action: Actions): State => {\n  switch (action.type) {\n    case ActionTypes.SET_VIEW:\n      state = {...state, view: action.view};\n      break;\n    case ActionTypes.SET_CRAWLS_VIEW:\n      state = {\n        ...state,\n        view: Views.CRAWLS,\n        crawlsView: action.crawlsView,\n        editWebCrawl: undefined,\n        editFileCrawl: undefined\n      };\n      break;\n    case ActionTypes.EDIT_SCHEMA:\n      state = {\n        ...state,\n        selectedIndex: action.selectedIndex,\n        view: Views.SCHEMA\n      };\n      break;\n    case ActionTypes.EDIT_WEB_CRAWL:\n      state = {\n        ...state,\n        editWebCrawl: {crawlName: action.crawlName, indexName: action.indexName, settings: action.settings},\n        view: Views.CRAWLS,\n        crawlsView: CrawlsViews.WEB_CRAWLS\n      };\n      break;\n    case ActionTypes.EDIT_FILE_CRAWL:\n      state = {\n        ...state,\n        editFileCrawl: {crawlName: action.crawlName, indexName: action.indexName, settings: action.settings},\n        view: Views.CRAWLS,\n        crawlsView: CrawlsViews.FILE_CRAWLS\n      };\n      break;\n    default:\n      return state;\n  }\n  window.localStorage.setItem(STATE_KEY, JSON.stringify(state));\n  return state;\n}\n\n// Store creation\nconst storageState = window.localStorage.getItem(STATE_KEY);\nconst initialState: State = storageState ? JSON.parse(storageState) : defaultState;\n\nexport default createStore(reducer, initialState)\n\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nexport enum CrawlFilterStatus {\n  accept = 'accept',\n  reject = 'reject'\n}\n\nexport interface CrawlFilterItem {\n  pattern?: string;\n  status: CrawlFilterStatus\n}\n\nexport interface WebCrawlSettings {\n  entryUrl: string\n  maxDepth?: number\n  filters?: CrawlFilterItem[]\n  filterPolicy?: CrawlFilterStatus\n}\n\nexport interface FileCrawlSettings {\n  entryPath: string\n  maxDepth?: number\n  filters?: CrawlFilterItem[]\n  filterPolicy?: CrawlFilterStatus\n}\n\nexport interface CrawlStatus {\n  startTime?: number\n  endTime?: number\n  crawled?: number\n  rejected?: number\n  error?: number\n  running?: boolean\n  aborting?: boolean\n  abortingReason?: string\n}\n\nexport interface CrawlNameStatus {\n  name: string\n  status: CrawlStatus\n}\n\nexport interface CrawlRowProps {\n  item: CrawlNameStatus\n  completionCallback: () => void\n}\n","export default __webpack_public_path__ + \"static/media/oss_logo.40a9f4cc.png\";","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport AppBar from '@material-ui/core/AppBar';\nimport * as React from 'react';\nimport {Tab, Tabs, Toolbar} from \"@material-ui/core\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setView, State, Views} from \"./store\";\nimport oss_logo from \"./media/oss_logo.png\";\n\nconst Navbar = () => {\n  const view = useSelector<State>(state => state.view)\n  const dispatch = useDispatch();\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: Views) => {\n    dispatch(setView(newValue))\n  };\n\n  return (\n    <AppBar position=\"static\" color={\"transparent\"}>\n      <Toolbar>\n        <img src={oss_logo} alt=\"OpenSearchServer Logo\" style={{maxHeight: \"48px\", width: \"auto\"}}/>\n        <Tabs value={view} onChange={handleChange} aria-label=\"Main tab navigation\">\n          <Tab label=\"Indices\" value={Views.INDICES}/>\n          <Tab label=\"Crawls\" value={Views.CRAWLS}/>\n          <Tab label=\"Queries\" value={Views.QUERIES}/>\n          <Tab label=\"GraphQL\" value={Views.GRAPHQL}/>\n        </Tabs>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\n\nexport default Navbar;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nexport const GRAPHQL_ENDPOINT = \"http://localhost:9090/graphql\";\n","/*\n * Copyright 2017-2020 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport GraphiQL from 'graphiql';\nimport 'graphiql/graphiql.min.css';\nimport {GRAPHQL_ENDPOINT} from \"./constants\";\n\nconst Gql = () => {\n  return (\n    <GraphiQL\n      fetcher={async graphQLParams => {\n        const data = await fetch(\n          GRAPHQL_ENDPOINT,\n          {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(graphQLParams),\n            credentials: 'same-origin',\n          },\n        );\n        return data.json().catch(() => data.text());\n      }}\n    />);\n}\n\nexport default Gql;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Box,\n  Button, CircularProgress,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {editSchema} from \"./store\";\n\nconst INDEX_LIST = gql`\n  query IndexList($keywords: String, $start: Int, $rows: Int) {\n    indexList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      id\n    }\n  }\n`;\n\nconst CREATE_INDEX = gql`\n  mutation Createindex($name: String!) {\n    createIndex(name: $name)\n  }\n`\nconst DELETE_INDEX = gql`\n  mutation Deleteindex($name: String!) {\n    deleteIndex(name: $name)\n  }\n`\n\ninterface Index {\n  id: string;\n  name: string;\n}\n\ninterface IndexData {\n  indexList: Index[];\n}\n\nconst Indices = () => {\n  const dispatch = useDispatch();\n  const [keywords, setKeywords] = useState<String>('');\n  const [start] = useState<Number>(0);\n  const [rows] = useState<Number>(1000);\n  const {loading, error, data, refetch} = useQuery<IndexData>(INDEX_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\"\n  });\n  const [gqlCreate, {loading: loadingCreate}] = useMutation(CREATE_INDEX, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [gqlDelete, {loading: loadingDelete}] = useMutation(DELETE_INDEX, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL INDEX_LIST error: \", error);\n  }\n  return (\n    <>\n      <Box p={2}>\n        <Grid container spacing={1} alignItems={\"flex-end\"}>\n          <Grid item xs>\n            <TextField label=\"Index name\" value={keywords} size={\"small\"} fullWidth={true}\n                       onChange={e => setKeywords(e.target.value)}/>\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            {(loadingCreate || loading) && <CircularProgress size={30}/>}\n            {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            <Button disabled={!keywords || keywords.length === 0 || !data || data.indexList.length > 0}\n                    fullWidth={true} size={\"small\"}\n                    variant=\"contained\" onClick={() => gqlCreate().then(() => refetch())}\n                    color=\"primary\">Create index\n            </Button>\n          </Grid>\n          <Grid item xs={\"auto\"}>\n            <Button disabled={!data || data.indexList.length !== 1 || data.indexList[0].name !== keywords}\n                    fullWidth={true} size={\"small\"}\n                    variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                    color=\"secondary\">Delete index\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <TableContainer component={Box}>\n        <Table size={\"small\"}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Uuid</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data?.indexList.map((item) => (\n              <TableRow key={item.id} onClick={() => {\n                dispatch(editSchema(item.name))\n              }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {item.name}\n                </TableCell>\n                <TableCell>{item.id}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default Indices;\n","/*\n * Copyright 2017-2018 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setView, State, Views} from \"./store\";\nimport {Button} from \"@material-ui/core\";\n\nconst Schema = () => {\n  const selectedIndex = useSelector<State>(state => state.selectedIndex)\n  const dispatch = useDispatch();\n\n  return (<div>\n    Edit Schema ? {selectedIndex}\n    <Button onClick={() => dispatch(setView(Views.INDICES))}>Back</Button>\n  </div>)\n}\n\nexport default Schema;\n","export const toDateTime = (timeMs?: number): string | undefined => {\n  if (!timeMs)\n    return undefined;\n  const date = new Date(timeMs);\n  return date.toLocaleString();\n};\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {useDispatch} from \"react-redux\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {useCallback, useState} from \"react\";\nimport {editWebCrawl} from \"./store\";\nimport {Box, Button, TableCell, TableRow, TextField} from \"@material-ui/core\";\nimport {gql} from \"@apollo/client/core\";\nimport {CrawlRowProps, WebCrawlSettings} from \"./types\";\nimport {toDateTime} from \"./Utils\";\n\nconst RUN_WEB_CRAWL = gql`\n  mutation RunWebCrawl($name: String!) {\n    runWebCrawl(name: $name) {\n      name\n    }\n  }\n`\nconst ABORT_WEB_CRAWL = gql`\n  mutation AbortWebCrawl($name: String!, $reason: String) {\n    abortWebCrawl(name: $name, aborting_reason: $reason)\n  }\n`\n\nconst GET_WEB_CRAWL = gql`\n  query GetWebCrawl($name: String!) {\n    getWebCrawl(name: $name) {\n      index\n      settings {\n        entryUrl\n        maxDepth\n        filters {\n          pattern\n          status\n        }\n        filterPolicy\n      }\n    }\n  }\n`\n\ninterface GetWebCrawl {\n  index?: string,\n  settings: WebCrawlSettings\n}\n\ninterface GetWebCrawlData {\n  getWebCrawl?: GetWebCrawl;\n}\n\nconst WebCrawlRow = ({item, completionCallback}: CrawlRowProps) => {\n  const dispatch = useDispatch();\n  const [gqlRun] = useMutation(RUN_WEB_CRAWL, {\n    onCompleted: data => {\n      completionCallback();\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [gqlAbort] = useMutation(ABORT_WEB_CRAWL, {\n    onCompleted: data => {\n      completionCallback();\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [gqlGetCrawl] = useLazyQuery<GetWebCrawlData>(GET_WEB_CRAWL, {\n    variables: {name: item.name},\n    fetchPolicy: 'no-cache',\n    onCompleted: data => {\n      if (!data.getWebCrawl) {\n        const err = \"The crawl does not exist: \" + item.name;\n        alert(err);\n        console.error(err);\n      } else {\n        dispatch(editWebCrawl(item.name, data.getWebCrawl.index, data.getWebCrawl.settings));\n      }\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [abortingReason, setAbortingReason] = useState<string>(item.status.abortingReason || '');\n\n  const runCrawlAction = useCallback(async () => {\n    await gqlRun({variables: {name: item.name}});\n  }, [gqlRun, item.name]);\n\n  const abortCrawlAction = useCallback(async () => {\n    await gqlAbort({variables: {name: item.name, reason: abortingReason}});\n  }, [gqlAbort, abortingReason, item.name]);\n\n  const editGetCrawlAction = () => {\n    console.log(\"editGetCrawlAction\");\n    gqlGetCrawl();\n  }\n\n  const disableAbort = !item.status.running || item.status.aborting;\n  const disableRun = item.status.running;\n  const endTime = item.status.endTime ? toDateTime(item.status.endTime) : item.status.aborting ? 'Aborting...' : item.status.running ? 'Running...' : undefined;\n\n  return (\n    <TableRow key={item.name}>\n      <TableCell>\n        <Button size={\"small\"} variant={'outlined'} onClick={editGetCrawlAction}>\n          {item.name}\n        </Button>\n      </TableCell>\n      <TableCell>\n        {toDateTime(item.status.startTime)}\n      </TableCell>\n      <TableCell>\n        {endTime}\n      </TableCell>\n      <TableCell>\n        {item.status.crawled}\n      </TableCell>\n      <TableCell>\n        {item.status.rejected}\n      </TableCell>\n      <TableCell>\n        {item.status.error}\n      </TableCell>\n      <TableCell>\n        <Box display={\"flex\"} alignItems={\"flex-end\"}>\n          <Box mr={1} flexGrow={1}>\n            <TextField label=\"Aborting reason\" value={abortingReason} disabled={disableAbort}\n                       onChange={e => setAbortingReason(e.target.value)} size={\"small\"} fullWidth={true}/>\n          </Box>\n          <Box mr={1}>\n            <Button disabled={disableAbort} size={\"small\"}\n                    variant=\"contained\" onClick={abortCrawlAction} color=\"secondary\">Abort\n            </Button>\n          </Box>\n          <Button disabled={disableRun} size={\"small\"}\n                  variant=\"contained\" onClick={runCrawlAction} color=\"primary\">Run\n          </Button>\n        </Box>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nexport default WebCrawlRow;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useCallback, useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Button, CircularProgress,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {editWebCrawl, State} from \"./store\";\nimport WebCrawlRow from \"./WebCrawlRow\";\nimport {CrawlNameStatus} from \"./types\";\n\nconst WEB_CRAWL_LIST = gql`\n  query WebCrawlList($keywords: String, $start: Int, $rows: Int) {\n    webCrawlList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      status {\n        running\n        aborting\n        abortingReason\n        crawled\n        rejected\n        redirect\n        error\n        lastError\n        currentCrawl\n        currentDepth\n        startTime\n        endTime\n      }\n    }\n  }\n`;\n\nconst DELETE_WEB_CRAWL = gql`\n  mutation DeleteWebCrawl($name: String!) {\n    deleteWebCrawl(name: $name)\n  }\n`\n\ninterface WebCrawlData {\n  webCrawlList: CrawlNameStatus[];\n}\n\nconst WebCrawls = () => {\n  const dispatch = useDispatch();\n  const selectedIndex = useSelector((state: State) => state.selectedIndex);\n  const [keywords, setKeywords] = useState<string>('');\n  const [start] = useState<number>(0);\n  const [rows] = useState<number>(1000);\n  const {loading, error, data, refetch} = useQuery<WebCrawlData>(WEB_CRAWL_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\",\n    pollInterval: 10000\n  });\n  const [gqlDelete, {loading: loadingDelete}] = useMutation(DELETE_WEB_CRAWL, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL WEB_CRAWL_LIST error: \", error);\n  }\n\n  const editCrawlAction = useCallback(() => {\n    dispatch(editWebCrawl(keywords, selectedIndex, undefined));\n  }, [dispatch, selectedIndex, keywords]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={7}>\n              <Grid container spacing={1} alignItems={\"flex-end\"}>\n                <Grid item xs>\n                  <TextField label=\"Web crawl name\" value={keywords} size={\"small\"} fullWidth={true}\n                             onChange={(e) => setKeywords(e.target.value)}/>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  {loading && <CircularProgress size={30}/>}\n                  {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!keywords || keywords.length === 0 || !data || data.webCrawlList.length > 0}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={editCrawlAction}\n                          color=\"primary\">Create crawl\n                  </Button>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!data || data.webCrawlList.length !== 1 || data.webCrawlList[0].name !== keywords}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                          color=\"secondary\">Delete crawl\n                  </Button>\n                </Grid>\n              </Grid>\n            </TableCell>\n          </TableRow>\n          {data && data.webCrawlList && data.webCrawlList.length > 0 && <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Started</TableCell>\n            <TableCell>Ended</TableCell>\n            <TableCell>Crawled</TableCell>\n            <TableCell>Rejected</TableCell>\n            <TableCell>Error</TableCell>\n            <TableCell></TableCell>\n          </TableRow>}\n        </TableHead>\n        <TableBody>\n          {data?.webCrawlList.map((item) =>\n            <WebCrawlRow key={item.name} item={item} completionCallback={() => refetch()}/>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default WebCrawls;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {useDispatch} from \"react-redux\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {useCallback, useState} from \"react\";\nimport {editFileCrawl} from \"./store\";\nimport {Box, Button, TableCell, TableRow, TextField} from \"@material-ui/core\";\nimport {gql} from \"@apollo/client/core\";\nimport {CrawlRowProps, FileCrawlSettings} from \"./types\";\nimport {toDateTime} from \"./Utils\";\n\nconst RUN_FILE_CRAWL = gql`\n  mutation RunFileCrawl($name: String!) {\n    runFileCrawl(name: $name) {\n      name\n    }\n  }\n`\nconst ABORT_FILE_CRAWL = gql`\n  mutation AbortFileCrawl($name: String!, $reason: String) {\n    abortFileCrawl(name: $name, aborting_reason: $reason)\n  }\n`\n\nconst GET_FILE_CRAWL = gql`\n  query GetFileCrawl($name: String!) {\n    getFileCrawl(name: $name) {\n      index\n      settings {\n        entryPath\n        maxDepth\n        filters {\n          pattern\n          status\n        }\n        filterPolicy\n      }\n    }\n  }\n`\n\ninterface GetFileCrawl {\n  index?: string,\n  settings: FileCrawlSettings\n}\n\ninterface GetFileCrawlData {\n  getFileCrawl?: GetFileCrawl;\n}\n\nconst FileCrawlRow = ({item, completionCallback}: CrawlRowProps) => {\n  const dispatch = useDispatch();\n  const [gqlRun] = useMutation(RUN_FILE_CRAWL, {\n    onCompleted: data => {\n      completionCallback();\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [gqlAbort] = useMutation(ABORT_FILE_CRAWL, {\n    onCompleted: data => {\n      completionCallback();\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [gqlGetCrawl] = useLazyQuery<GetFileCrawlData>(GET_FILE_CRAWL, {\n    variables: {name: item.name},\n    fetchPolicy: 'no-cache',\n    onCompleted: data => {\n      if (!data.getFileCrawl) {\n        const err = \"The crawl does not exist: \" + item.name;\n        alert(err);\n        console.error(err);\n      } else {\n        dispatch(editFileCrawl(item.name, data.getFileCrawl.index, data.getFileCrawl.settings));\n      }\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  const [abortingReason, setAbortingReason] = useState<string>(item.status.abortingReason || '');\n\n  const runCrawlAction = useCallback(async () => {\n    await gqlRun({variables: {name: item.name}});\n  }, [gqlRun, item.name]);\n\n  const abortCrawlAction = useCallback(async () => {\n    await gqlAbort({variables: {name: item.name, reason: abortingReason}});\n  }, [gqlAbort, abortingReason, item.name]);\n\n  const editGetCrawlAction = () => {\n    console.log(\"editGetCrawlAction\");\n    gqlGetCrawl();\n  }\n\n  const disableAbort = !item.status.running || item.status.aborting;\n  const disableRun = item.status.running;\n  const endTime = item.status.endTime ? toDateTime(item.status.endTime) : item.status.aborting ? 'Aborting...' : item.status.running ? 'Running...' : undefined;\n\n  return (\n    <TableRow key={item.name}>\n      <TableCell>\n        <Button size={\"small\"} variant={'outlined'} onClick={editGetCrawlAction}>\n          {item.name}\n        </Button>\n      </TableCell>\n      <TableCell>\n        {toDateTime(item.status.startTime)}\n      </TableCell>\n      <TableCell>\n        {endTime}\n      </TableCell>\n      <TableCell>\n        {item.status.crawled}\n      </TableCell>\n      <TableCell>\n        {item.status.rejected}\n      </TableCell>\n      <TableCell>\n        {item.status.error}\n      </TableCell>\n      <TableCell>\n        <Box display={\"flex\"} alignItems={\"flex-end\"}>\n          <Box mr={1} flexGrow={1}>\n            <TextField label=\"Aborting reason\" value={abortingReason} disabled={disableAbort}\n                       onChange={e => setAbortingReason(e.target.value)} size={\"small\"} fullWidth={true}/>\n          </Box>\n          <Box mr={1}>\n            <Button disabled={disableAbort} size={\"small\"}\n                    variant=\"contained\" onClick={abortCrawlAction} color=\"secondary\">Abort\n            </Button>\n          </Box>\n          <Button disabled={disableRun} size={\"small\"}\n                  variant=\"contained\" onClick={runCrawlAction} color=\"primary\">Run\n          </Button>\n        </Box>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nexport default FileCrawlRow;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {gql} from \"@apollo/client/core\";\nimport {useCallback, useState} from \"react\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  Button, CircularProgress,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField\n} from \"@material-ui/core\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {editFileCrawl, State} from \"./store\";\nimport FileCrawlRow from \"./FileCrawlRow\";\nimport {CrawlNameStatus} from \"./types\";\n\nconst FILE_CRAWL_LIST = gql`\n  query FileCrawlList($keywords: String, $start: Int, $rows: Int) {\n    fileCrawlList(keywords: $keywords, start: $start, rows: $rows) {\n      name\n      status {\n        running\n        aborting\n        abortingReason\n        crawled\n        rejected\n        redirect\n        error\n        lastError\n        currentCrawl\n        currentDepth\n        startTime\n        endTime\n      }\n    }\n  }\n`;\n\nconst DELETE_FILE_CRAWL = gql`\n  mutation DeleteFileCrawl($name: String!) {\n    deleteFileCrawl(name: $name)\n  }\n`\n\ninterface FileCrawlData {\n  fileCrawlList: CrawlNameStatus[];\n}\n\nconst FileCrawls = () => {\n  const dispatch = useDispatch();\n  const selectedIndex = useSelector((state: State) => state.selectedIndex);\n  const [keywords, setKeywords] = useState<string>('');\n  const [start] = useState<number>(0);\n  const [rows] = useState<number>(1000);\n  const {loading, error, data, refetch} = useQuery<FileCrawlData>(FILE_CRAWL_LIST, {\n    variables: {keywords: keywords, start: start, rows: rows},\n    fetchPolicy: \"no-cache\",\n    pollInterval: 10000\n  });\n  const [gqlDelete, {loading: loadingDelete}] = useMutation(DELETE_FILE_CRAWL, {\n    variables: {name: keywords},\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n  if (error) {\n    alert(error.message);\n    console.error(\"GQL FILE_CRAWL_LIST error: \", error);\n  }\n\n  const editCrawlAction = useCallback(() => {\n    dispatch(editFileCrawl(keywords, selectedIndex, undefined));\n  }, [dispatch, selectedIndex, keywords]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell colSpan={7}>\n              <Grid container spacing={1} alignItems={\"flex-end\"}>\n                <Grid item xs>\n                  <TextField label=\"File crawl name\" value={keywords} size={\"small\"} fullWidth={true}\n                             onChange={(e) => setKeywords(e.target.value)}/>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  {loading && <CircularProgress size={30}/>}\n                  {loadingDelete && <CircularProgress size={30} color={\"secondary\"}/>}\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!keywords || keywords.length === 0 || !data || data.fileCrawlList.length > 0}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={editCrawlAction}\n                          color=\"primary\">Create crawl\n                  </Button>\n                </Grid>\n                <Grid item xs={\"auto\"}>\n                  <Button disabled={!data || data.fileCrawlList.length !== 1 || data.fileCrawlList[0].name !== keywords}\n                          fullWidth={true} size={\"small\"}\n                          variant=\"contained\" onClick={() => gqlDelete().then(() => refetch())}\n                          color=\"secondary\">Delete crawl\n                  </Button>\n                </Grid>\n              </Grid>\n            </TableCell>\n          </TableRow>\n          {data && data.fileCrawlList && data.fileCrawlList.length > 0 && <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Started</TableCell>\n            <TableCell>Ended</TableCell>\n            <TableCell>Crawled</TableCell>\n            <TableCell>Rejected</TableCell>\n            <TableCell>Error</TableCell>\n            <TableCell></TableCell>\n          </TableRow>}\n        </TableHead>\n        <TableBody>\n          {data?.fileCrawlList.map((item) =>\n            <FileCrawlRow key={item.name} item={item} completionCallback={() => refetch()}/>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default FileCrawls;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {CrawlFilterStatus} from \"../types\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\n\ninterface Props {\n  isDefault: boolean\n  disabled: boolean,\n  status: CrawlFilterStatus,\n  setStatus: (newStatus: CrawlFilterStatus) => void,\n}\n\nconst CrawlFilterStatusOption = ({disabled, status, setStatus, isDefault}: Props) => {\n\n  const title = isDefault ? 'Default policy' : 'Policy';\n\n  return (\n    <FormControl fullWidth={true}>\n      <InputLabel id=\"policy-label\">{title}</InputLabel>\n      <Select labelId=\"policy-label\" id=\"policy\" value={status}\n              disabled={disabled}\n              onChange={e => setStatus(e.target.value as CrawlFilterStatus)}>\n        <MenuItem value={CrawlFilterStatus.accept}>Accept</MenuItem>\n        <MenuItem value={CrawlFilterStatus.reject}>Reject</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default CrawlFilterStatusOption;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {Box, Button, TextField} from \"@material-ui/core\";\n\nimport {CrawlFilterItem, CrawlFilterStatus} from \"../types\";\nimport {useEffect, useState} from \"react\";\nimport CrawlFilterStatusOption from \"./CrawlFilterStatus\";\n\ninterface Props {\n  disabled: boolean,\n  index?: number,\n  filter?: CrawlFilterItem,\n  onAdd?: (item: CrawlFilterItem) => void,\n  onSave?: (item: CrawlFilterItem, index: number) => void,\n  onDelete?: (index: number) => void\n}\n\nconst CrawlFilterItemView = (props: Props) => {\n\n    const [pattern, setPattern] = useState<string>(props.filter?.pattern || '');\n    const [status, setStatus] = useState<CrawlFilterStatus>((props.filter?.status) || CrawlFilterStatus.accept);\n    const [hasChanges, setHashChanges] = useState<boolean>(false);\n\n    const onAdd = () => {\n      if (props.onAdd) {\n        props.onAdd({pattern: pattern, status: status})\n      }\n    }\n\n    const onSave = () => {\n      console.log(\"onSave props\", props, props.index);\n      if (props.onSave && props.index) {\n        props.onSave({pattern: pattern, status: status}, props.index);\n      }\n    }\n\n    const onDelete = () => {\n      if (props.onDelete && props.index) {\n        props.onDelete(props.index);\n      }\n    }\n\n    useEffect(() => {\n      const b = pattern !== props.filter?.pattern || status !== props.filter?.status;\n      setHashChanges(b);\n    }, [props.filter, pattern, status])\n\n    return (\n      <Box display={\"flex\"} mb={2}>\n        <Box flexGrow={1} mr={2}>\n          <TextField id=\"filter\" label=\"Wildcard filter\" fullWidth={true}\n                     value={pattern}\n                     disabled={props.disabled}\n                     onChange={e => setPattern(e.target.value)}\n                     placeholder={\"https://www.opensearchserver.com/*\"}/>\n        </Box>\n        <Box mr={2}>\n          <CrawlFilterStatusOption disabled={props.disabled} status={status} setStatus={setStatus} isDefault={false}/>\n        </Box>\n        <Box mr={2} display={\"flex\"} alignItems={\"flex-end\"}>\n          {!props.filter &&\n          <Button size={\"small\"} variant={\"contained\"} color={\"primary\"} disabled={!pattern.length || props.disabled}\n                  onClick={onAdd}>Add\n          </Button>\n          }\n          {props.filter && <>\n            <Box mr={1}>\n              <Button size={\"small\"} variant={\"contained\"} color={\"primary\"} disabled={!hasChanges || props.disabled}\n                      onClick={onSave}>Save\n              </Button>\n            </Box>\n            <Button size={\"small\"} variant={\"contained\"} color={\"secondary\"}\n                    disabled={props.disabled}\n                    onClick={onDelete}>Delete\n            </Button>\n          </>\n          }\n        </Box>\n      </Box>\n    )\n  }\n;\n\nexport default CrawlFilterItemView;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {CrawlFilterItem} from \"../types\";\n\ninterface CrawlFilterItemWithKey {\n  key: number,\n  filter: CrawlFilterItem\n}\n\nclass CrawFilterListWithKey {\n\n  private sequenceNumber: number;\n  list: CrawlFilterItemWithKey[];\n\n  constructor(crawlFilters: CrawlFilterItem[] | undefined) {\n    this.sequenceNumber = 1;\n    this.list = [];\n    if (crawlFilters) {\n      for (let crawlFilter of crawlFilters) {\n        this.add(crawlFilter);\n      }\n    }\n  }\n\n  add(crawlFilterItem: CrawlFilterItem): CrawlFilterItem[] {\n    delete (crawlFilterItem as any)['__typename']; //Remove Filter type, as the mutation expect a FilterInput\n    const newItem: CrawlFilterItemWithKey = {key: this.sequenceNumber++, filter: crawlFilterItem};\n    this.list.push(newItem);\n    return this.getList();\n  }\n\n  save(itemToSave: CrawlFilterItem, keyToSave: number): CrawlFilterItem[] {\n    const itemToUpdate = this.list.find(item => item.key === keyToSave);\n    if (itemToUpdate) {\n      itemToUpdate.filter = itemToSave;\n    }\n    return this.getList();\n  }\n\n  delete(key: number): CrawlFilterItem[] {\n    this.list = this.list.filter(item => item.key !== key);\n    return this.getList();\n  }\n\n  private getList(): CrawlFilterItem[] {\n    let list: CrawlFilterItem[] = [];\n    for (let crawlFilterItemWithKey of this.list) {\n      list.push(crawlFilterItemWithKey.filter);\n    }\n    return list;\n  }\n\n}\n\nexport default CrawFilterListWithKey;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CrawlsViews, setCrawlsView, State} from \"./store\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport CrawlFilterItemView from \"./components/CrawlFilterItemView\";\nimport {useState} from \"react\";\nimport {CrawlFilterItem, CrawlFilterStatus} from \"./types\";\nimport {useMutation} from \"@apollo/client\";\nimport {gql} from \"@apollo/client/core\";\nimport CrawlFilterStatusOption from \"./components/CrawlFilterStatus\";\nimport CrawFilterListWithKey from \"./components/CrawFilterListWithKey\";\n\nconst UPSERT_WEB_CRAWL = gql`\n  mutation UpsertWebCrawl($name: String!, $settings: WebCrawlSettingsInput!, $index: String!) {\n    upsertWebCrawl(name: $name, settings: $settings, index: $index) {name}\n  }\n`\n\nconst WebCrawlEdit = () => {\n  const dispatch = useDispatch();\n  const editWebCrawl = useSelector((state: State) => state.editWebCrawl);\n  const [indexName, setIndexName] = useState<string>(editWebCrawl?.indexName || '');\n  const [entryUrl, setEntryUrl] = useState<string>(editWebCrawl?.settings?.entryUrl || '');\n  const [maxDepth, setMaxDepth] = useState<number | undefined>(editWebCrawl?.settings?.maxDepth);\n  const [crawlName, setCrawlName] = useState<string>(editWebCrawl?.crawlName || '');\n  const [crawlFilterPolicy, setCrawlFilterPolicy] = useState<CrawlFilterStatus>((editWebCrawl?.settings?.filterPolicy) || CrawlFilterStatus.reject);\n  const [crawlFilterList, setCrawlFilterList] = useState<CrawlFilterItem[]>(editWebCrawl?.settings?.filters || []);\n  const [crawlFilterListWithKey] = useState<CrawFilterListWithKey>(new CrawFilterListWithKey(editWebCrawl?.settings?.filters));\n\n  const [gqlUpsertCrawl, {loading}] = useMutation(UPSERT_WEB_CRAWL, {\n    variables: {\n      name: crawlName,\n      settings: {entryUrl: entryUrl, maxDepth: maxDepth, filters: crawlFilterList, filterPolicy: crawlFilterPolicy},\n      index: indexName\n    },\n    onCompleted: data => {\n      dispatch(setCrawlsView(CrawlsViews.WEB_CRAWLS));\n      console.trace(data);\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n\n  const onCancel = () => {\n    dispatch(setCrawlsView(CrawlsViews.WEB_CRAWLS));\n  }\n\n  const onUpsert = async () => {\n    await gqlUpsertCrawl();\n  }\n\n  const onAdd = (item: CrawlFilterItem) => {\n    setCrawlFilterList(crawlFilterListWithKey.add(item));\n  }\n\n  const onSave = (itemToSave: CrawlFilterItem, key: number) => {\n    console.log(\"onSave\", itemToSave, key);\n    setCrawlFilterList(crawlFilterListWithKey.save(itemToSave, key));\n  }\n\n  const onDelete = (key: number) => {\n    setCrawlFilterList(crawlFilterListWithKey.delete(key));\n  }\n\n  const isEdit = editWebCrawl?.settings !== undefined;\n  const title = isEdit ? \"Edit Web Crawl\" : \"New Web Crawl\";\n\n  return (\n    <Box p={1}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify={\"space-between\"} spacing={10}>\n            <Grid item>\n              <Typography align={\"right\"} variant={\"h5\"}>{title}</Typography>\n            </Grid>\n            <Grid item>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"secondary\"}\n                          onClick={onCancel}>Cancel</Button>\n                </Grid>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"primary\"}\n                          onClick={onUpsert}>Upsert</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <form noValidate autoComplete=\"off\">\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <TextField fullWidth\n                           required id=\"CrawlName\" label=\"Crawl Name\" value={crawlName}\n                           disabled={true}\n                           onChange={e => setCrawlName(e.target.value)}\n                           placeholder={editWebCrawl?.crawlName || 'Crawl name'}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth required id=\"IndexName\" label=\"Index Name\" value={indexName}\n                           disabled={loading}\n                           onChange={e => setIndexName(e.target.value)}\n                           placeholder={editWebCrawl?.indexName || 'Index name'}/>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField fullWidth required id=\"entryUrl\" label=\"Entry URL\" value={entryUrl}\n                           disabled={loading}\n                           onChange={e => setEntryUrl(e.target.value)}\n                           placeholder={\"https://www.opensearchserver.com\"}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth id=\"max_depth\" label=\"Max depth\" type={\"number\"}\n                           disabled={loading}\n                           value={maxDepth} onChange={e => setMaxDepth(+e.target.value)}\n                           placeholder={\"1\"}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth id=\"max_number_url\" label=\"Max number of URL\" type={\"number\"}\n                           disabled={loading}\n                           placeholder={\"1000\"}/>\n              </Grid>\n              <Grid item xs={10}>\n                <CrawlFilterItemView onAdd={onAdd} disabled={loading}/>\n                {crawlFilterListWithKey.list.map((item) =>\n                  <CrawlFilterItemView disabled={loading} key={item.key} filter={item.filter}\n                                       index={item.key} onSave={onSave} onDelete={onDelete}/>)}\n              </Grid>\n              <Grid item xs={2}>\n                <CrawlFilterStatusOption disabled={false} status={crawlFilterPolicy}\n                                         setStatus={setCrawlFilterPolicy} isDefault={true}/>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default WebCrawlEdit;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CrawlsViews, setCrawlsView, State} from \"./store\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport CrawlFilterItemView from \"./components/CrawlFilterItemView\";\nimport {useState} from \"react\";\nimport {CrawlFilterItem, CrawlFilterStatus} from \"./types\";\nimport {useMutation} from \"@apollo/client\";\nimport {gql} from \"@apollo/client/core\";\nimport CrawlFilterStatusOption from \"./components/CrawlFilterStatus\";\nimport CrawFilterListWithKey from \"./components/CrawFilterListWithKey\";\n\nconst UPSERT_FILE_CRAWL = gql`\n  mutation UpsertFileCrawl($name: String!, $settings: FileCrawlSettingsInput!, $index: String!) {\n    upsertFileCrawl(name: $name, settings: $settings, index: $index) {name}\n  }\n`\n\nconst FileCrawlEdit = () => {\n  const dispatch = useDispatch();\n  const editFileCrawl = useSelector((state: State) => state.editFileCrawl);\n  const [indexName, setIndexName] = useState<string>(editFileCrawl?.indexName || '');\n  const [entryPath, setEntryPath] = useState<string>(editFileCrawl?.settings?.entryPath || '');\n  const [maxDepth, setMaxDepth] = useState<number | undefined>(editFileCrawl?.settings?.maxDepth);\n  const [crawlName, setCrawlName] = useState<string>(editFileCrawl?.crawlName || '');\n  const [crawlFilterPolicy, setCrawlFilterPolicy] = useState<CrawlFilterStatus>((editFileCrawl?.settings?.filterPolicy) || CrawlFilterStatus.reject);\n  const [crawlFilterList, setCrawlFilterList] = useState<CrawlFilterItem[]>(editFileCrawl?.settings?.filters || []);\n  const [crawlFilterListWithKey] = useState<CrawFilterListWithKey>(new CrawFilterListWithKey(editFileCrawl?.settings?.filters));\n\n  const [gqlUpsertCrawl, {loading}] = useMutation(UPSERT_FILE_CRAWL, {\n    variables: {\n      name: crawlName,\n      settings: {entryPath: entryPath, maxDepth: maxDepth, filters: crawlFilterList, filterPolicy: crawlFilterPolicy},\n      index: indexName\n    },\n    onCompleted: data => {\n      dispatch(setCrawlsView(CrawlsViews.FILE_CRAWLS));\n      console.trace(data);\n    },\n    onError: err => {\n      alert(err);\n      console.error(err);\n    }\n  });\n\n  const onCancel = () => {\n    dispatch(setCrawlsView(CrawlsViews.FILE_CRAWLS));\n  }\n\n  const onUpsert = async () => {\n    await gqlUpsertCrawl();\n  }\n\n  const onAdd = (item: CrawlFilterItem) => {\n    setCrawlFilterList(crawlFilterListWithKey.add(item));\n  }\n\n  const onSave = (itemToSave: CrawlFilterItem, key: number) => {\n    console.log(\"onSave\", itemToSave, key);\n    setCrawlFilterList(crawlFilterListWithKey.save(itemToSave, key));\n  }\n\n  const onDelete = (key: number) => {\n    setCrawlFilterList(crawlFilterListWithKey.delete(key));\n  }\n\n  const isEdit = editFileCrawl?.settings !== undefined;\n  const title = isEdit ? \"Edit File Crawl\" : \"New File Crawl\";\n\n  return (\n    <Box p={1}>\n      <Paper>\n        <Box p={2}>\n          <Grid container justify={\"space-between\"} spacing={10}>\n            <Grid item>\n              <Typography align={\"right\"} variant={\"h5\"}>{title}</Typography>\n            </Grid>\n            <Grid item>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"secondary\"}\n                          onClick={onCancel}>Cancel</Button>\n                </Grid>\n                <Grid item>\n                  <Button variant={\"contained\"} color={\"primary\"}\n                          onClick={onUpsert}>Upsert</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <form noValidate autoComplete=\"off\">\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <TextField fullWidth\n                           required id=\"CrawlName\" label=\"Crawl Name\" value={crawlName}\n                           disabled={true}\n                           onChange={e => setCrawlName(e.target.value)}\n                           placeholder={editFileCrawl?.crawlName || 'Crawl name'}/>\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth required id=\"IndexName\" label=\"Index Name\" value={indexName}\n                           disabled={loading}\n                           onChange={e => setIndexName(e.target.value)}\n                           placeholder={editFileCrawl?.indexName || 'Index name'}/>\n              </Grid>\n              <Grid item xs={10}>\n                <TextField fullWidth required id=\"entryUrl\" label=\"Entry Path\" value={entryPath}\n                           disabled={loading}\n                           onChange={e => setEntryPath(e.target.value)}\n                           placeholder={\"/var/lib/share\"}/>\n              </Grid>\n              <Grid item xs={2}>\n                <TextField fullWidth id=\"max_depth\" label=\"Max depth\" type={\"number\"}\n                           disabled={loading}\n                           value={maxDepth} onChange={e => setMaxDepth(+e.target.value)}\n                           placeholder={\"1\"}/>\n              </Grid>\n              <Grid item xs={10}>\n                <CrawlFilterItemView onAdd={onAdd} disabled={loading}/>\n                {crawlFilterListWithKey.list.map((item) =>\n                  <CrawlFilterItemView disabled={loading} key={item.key} filter={item.filter}\n                                       index={item.key} onSave={onSave} onDelete={onDelete}/>)}\n              </Grid>\n              <Grid item xs={2}>\n                <CrawlFilterStatusOption disabled={false} status={crawlFilterPolicy}\n                                         setStatus={setCrawlFilterPolicy} isDefault={true}/>\n              </Grid>\n            </Grid>\n          </form>\n        </Box>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default FileCrawlEdit;\n","/*\n * Copyright 2017-2021 Emmanuel Keller / Jaeksoft\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CrawlsViews, setCrawlsView, State} from \"./store\";\nimport {AppBar, Tab, Tabs} from \"@material-ui/core\";\nimport * as React from \"react\";\nimport WebCrawls from \"./WebCrawls\";\nimport FileCrawls from \"./FileCrawls\";\nimport WebCrawl from \"./WebCrawlEdit\";\nimport FileCrawlEdit from \"./FileCrawlEdit\";\n\nconst Crawls = () => {\n  const dispatch = useDispatch();\n  const crawlsView = useSelector<State>(state => state.crawlsView);\n  const editWebCrawl = useSelector<State>(state => state.editWebCrawl);\n  const editFileCrawl = useSelector<State>(state => state.editFileCrawl);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    dispatch(setCrawlsView(newValue))\n  };\n\n  console.trace(\"crawlsview\", crawlsView);\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Tabs value={crawlsView} onChange={handleChange} aria-label=\"Crawls tabs\">\n          <Tab label=\"Web Crawls\" value={CrawlsViews.WEB_CRAWLS}/>\n          <Tab label=\"File Crawls\" value={CrawlsViews.FILE_CRAWLS}/>\n        </Tabs>\n      </AppBar>\n      {(crawlsView === CrawlsViews.WEB_CRAWLS && !editWebCrawl) && <WebCrawls/>}\n      {(crawlsView === CrawlsViews.FILE_CRAWLS && !editFileCrawl) && <FileCrawls/>}\n      {(crawlsView === CrawlsViews.WEB_CRAWLS && editWebCrawl) && <WebCrawl/>}\n      {(crawlsView === CrawlsViews.FILE_CRAWLS && editFileCrawl) && <FileCrawlEdit/>}\n    </div>\n  )\n}\n\nexport default Crawls;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider, useSelector} from \"react-redux\";\nimport store, {State, Views} from \"./store\";\nimport Navbar from \"./Navbar\";\nimport Gql from \"./Gql\";\nimport Indices from \"./Indices\";\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\nimport {GRAPHQL_ENDPOINT} from \"./constants\";\nimport Schema from \"./Schema\";\nimport Crawls from \"./Crawls\";\nimport {Box} from \"@material-ui/core\";\n\nconst View = () => {\n  const view = useSelector<State>(state => state.view)\n  switch (view) {\n    case Views.INDICES:\n      return (\n        <Indices/>\n      );\n    case Views.CRAWLS:\n      return (\n        <Crawls/>\n      );\n    case Views.QUERIES:\n      return (\n        <div>QUERIES</div>\n      );\n    case Views.GRAPHQL:\n      return (\n        <Gql/>\n      );\n    case Views.SCHEMA:\n      return (\n        <Schema/>\n      );\n    default:\n      return null;\n  }\n}\n\nconst apolloClient = new ApolloClient({\n  uri: GRAPHQL_ENDPOINT,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={apolloClient}>\n        <Box m={0} display={\"flex\"} flexDirection={\"column\"} height={\"100vh\"}>\n          <Box m={0} marginBottom={1}>\n            <Navbar/>\n          </Box>\n          <Box m={0} p={0} height={\"100vh\"}>\n            <View/>\n          </Box>\n        </Box>\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}